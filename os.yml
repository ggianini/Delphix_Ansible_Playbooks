---
- name: Validação de Pré-Requisitos para Environment Delphix
  hosts: all
  gather_facts: yes
  vars_files:
    - ./vars.yml
      #vars_prompt:
      #- name: toolkit_path
      #prompt: Qual o path para o toolkit no destino?
      #private: false
      #- name: delphix_os
      #prompt: Qual o usuário delphix_os no destino?
      #private: false

  tasks:
        
    - name: Get User Info
      command: "id {{ delphix_os }}"
      changed_when: false
      register: user_info

    - name: Get {{ delphix_os }} info
      set_fact:
        user_groups: "{{ user_info.stdout | regex_findall('groups=([^\\s]+)') | last | split(',') }}"

    - name: Return {{ delphix_os }} group list
      debug:
        var: user_groups 
          
    - name: Testar o Comando 'mount'
      command: mount -V
      register: mount_status
      failed_when: false
      changed_when: false
      ignore_errors: yes

    - name: Exibir Status do Comando 'mount'
      debug:
        msg: "{% if mount_status.rc != 0 %}AVISO: O comando 'mount' não está funcionando corretamente.{% else %}Comando 'mount' está funcionando (OK){% endif %}"

    - name: Obter Status do SELinux
      command: getenforce
      register: selinux_status
      changed_when: false
      ignore_errors: yes
      when: ansible_facts['os_family'] == 'RedHat'

    - name: Criar diretório {{ toolkit_path }}
      file:
        path: "{{ toolkit_path }}"
        state: directory
        mode: "0770"
        owner: "{{ delphix_os }}"
        group: "{{ delphix_os }}"
      register: file_info

    - name: Exibir Status do diretório {{ toolkit_path }}
      debug:
        msg: O aquivo {{ toolkit_path }} existe no destino (OK)
      when: not file_info.failed

    - name: Criar diretório {{ mount_path }}
      file:
        path: "{{ mount_path }}"
        state: directory
        mode: "0755"
        owner: "{{ delphix_os }}"
        group: "{{ delphix_os }}"
      register: file_info
    
    - name: Exibir Status do diretório {{ mount_path }}
      debug:
        msg: O arquivo {{ mount_path }} existe no destino (OK)
      when: not file_info.failed

    - name: Exibir valor da variável de ambiente LANG
      debug:
        msg: "O valor da variável LANG é: {{ ansible_env.LANG }}"

